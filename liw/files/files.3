/* Part of publib.

   Copyright (c) 1994-2006 Lars Wirzenius.  All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   1. Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

   2. Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

   THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
   OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
   DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
.\" part of publib
.\" "@(#)publib-files:$Id: files.3,v 1.2 1994/02/03 17:33:58 liw Exp $"
.\"
.TH FILES 3 "C Programmer's Manual" Publib "C Programmer's Manual"
.SH NAME
xgetaline, xfseek, xfopen, xfclose, getaline, fassert \- file
manipulation utilities
.SH SYNOPSIS
.nf
#include <files.h>
.sp 1
FILE *\fBxfopen\fR(const char *\fIfilename\fR, const char *\fImode\fR);
void \fBxfclose\fR(FILE *\fIfp\fR);
void \fBxfseek\fR(FILE *\fIfp\fR, long \fIoffset\fR, int \fIorigin\fR);
char *\fBgetaline\fR(FILE *\fIfp\fR);
char *\fBxgetaline\fR(FILE *\fIfp\fR);
void \fBfassert\fR(FILE *\fIfp\fR);
.SH "DESCRIPTION"
These functions are useful for file manipulation.  The functions that
begin with \fIx\fR work like the functions without the letter, except
if there is an error, they print an error message and kill the
program.
.PP
\fIgetaline\fR reads a line from the given file.  It allocates the
memory for the line with \fImalloc(3)\fR, and returns a pointer to the
beginning of the line.  If there is an error, it returns NULL.  If the
returned value is not NULL, the caller is responsible for freeing the
memory.  The newline is removed from the end of the line.
.PP
\fIfassert\fR checks that the argument is not NULL, and that (for a
non-NULL argument) the file does not have its error indicator flag
set.  If either condition is true, it prints an error message and
termiantes the program.   If neither condition is true, it does
nothing.  This can be used to add checks that the I/O in a program is
going well; however, it is mostly useful only for small programs,
because more serious programs need to handle the errors more
gracefully.
.SH "SEE ALSO"
publib(3)
.SH AUTHOR
Lars Wirzenius (lars.wirzenius@helsinki.fi)
